import streamlit as st
import pandas as pd
import plotly.express as px

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = pd.read_csv("jul-07_17-55-24.csv")
df.columns = df.columns.str.strip()  # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö –∫–æ–ª–æ–Ω–æ–∫

# –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–æ–µ –ø–æ–ª–µ "–ú–∞—Ä–∫–∞ –ú–æ–¥–µ–ª—å"
df["model_full"] = df["–ú–∞—Ä–∫–∞"].astype(str) + " " + df["–ú–æ–¥–µ–ª—å"].astype(str)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üöò –î–∞—à–±–æ—Ä–¥ –ø–æ –∞–≤—Ç–æ –Ω–∞ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂—É")

# –§–∏–ª—å—Ç—Ä—ã
brands = st.multiselect("–ú–∞—Ä–∫–∞", df["–ú–∞—Ä–∫–∞"].dropna().unique(), default=None)
cities = st.multiselect("–ì–æ—Ä–æ–¥", df["–ì–æ—Ä–æ–¥"].dropna().unique(), default=None)
years = st.slider("–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞", int(df["–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞"].min()), int(df["–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞"].max()), (2015, 2023))


# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
filtered_df = df.copy()
if brands:
    filtered_df = filtered_df[filtered_df["–ú–∞—Ä–∫–∞"].isin(brands)]
if cities:
    filtered_df = filtered_df[filtered_df["–ì–æ—Ä–æ–¥"].isin(cities)]
filtered_df = filtered_df[
    (filtered_df["–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞"] >= years[0]) & (filtered_df["–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞"] <= years[1])
]
# –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ "–ü—Ä–æ–±–µ–≥" –∏ "–¶–µ–Ω–∞" –∫ —á–∏—Å–ª—É
filtered_df["–ü—Ä–æ–±–µ–≥_—á–∏—Å—Ç–æ"] = (
    filtered_df["–ü—Ä–æ–±–µ–≥"]
    .astype(str)
    .str.replace("–∫–º", "", regex=False)
    .str.replace(" ", "")
    .str.replace(",", "")
    .astype(float)
)

filtered_df["–¶–µ–Ω–∞"] = (
    filtered_df["–¶–µ–Ω–∞"]
    .astype(str)
    .str.replace("‚Ç∏", "", regex=False)
    .str.replace(" ", "")
    .str.replace(",", "")
    .astype(float)
)

filtered_df["–¶–µ–Ω–∞"] = (
    filtered_df["–¶–µ–Ω–∞"]
    .astype(str)
    .str.replace("‚Ç∏", "", regex=False)   # —É–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª —Ç–µ–Ω–≥–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    .str.replace("—Ç–≥", "", regex=False)  # –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    .str.replace(" ", "")                # —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
    .str.replace(",", "")                # —É–±–∏—Ä–∞–µ–º –∑–∞–ø—è—Ç—ã–µ (–µ—Å–ª–∏ 1,000,000)
    .astype(float)
)

# –ì—Ä–∞—Ñ–∏–∫ 1: –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Ü–µ–Ω
st.subheader("üìâ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–Ω")
fig1 = px.histogram(filtered_df, x="–¶–µ–Ω–∞", nbins=30, title="–¶–µ–Ω—ã –Ω–∞ –∞–≤—Ç–æ")
st.plotly_chart(fig1)


# –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É "–ü—Ä–æ–±–µ–≥"
grouped = (
    filtered_df.groupby("–ü—Ä–æ–±–µ–≥")
    .agg({"–¶–µ–Ω–∞": "mean", "–ü—Ä–æ–±–µ–≥_—á–∏—Å—Ç–æ": "first"})
    .sort_values("–ü—Ä–æ–±–µ–≥_—á–∏—Å—Ç–æ")
    .reset_index()
)

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω–∞—è –æ—Å—å X
grouped["–ü—Ä–æ–±–µ–≥"] = pd.Categorical(grouped["–ü—Ä–æ–±–µ–≥"], categories=grouped["–ü—Ä–æ–±–µ–≥"], ordered=True)

# Bar-–≥—Ä–∞—Ñ–∏–∫
st.subheader("üìä –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ –ø—Ä–æ–±–µ–≥—É (–∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ)")
fig3 = px.bar(grouped, x="–ü—Ä–æ–±–µ–≥", y="–¶–µ–Ω–∞", title="–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–±–µ–≥–∞")
st.plotly_chart(fig3)

from datetime import datetime

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ datetime
filtered_df["–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"] = pd.to_datetime(filtered_df["–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"], errors="coerce")
filtered_df["–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"] = filtered_df["–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"].dt.tz_localize(None)
filtered_df["–î–Ω–µ–π –≤ –ø—Ä–æ–¥–∞–∂–µ"] = (pd.Timestamp.now() - filtered_df["–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"]).dt.days

# –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ "–ú–∞—Ä–∫–∞ –ú–æ–¥–µ–ª—å"
top_models = (
    filtered_df.groupby("model_full")
    .agg(
        –ö–æ–ª_–≤–æ_–æ–±—ä—è–≤–ª–µ–Ω–∏–π=("model_full", "count"),
        –°—Ä–µ–¥_—Ü–µ–Ω–∞=("–¶–µ–Ω–∞", "mean"),
        –ú–∏–Ω_—Ü–µ–Ω–∞=("–¶–µ–Ω–∞", "min"),
        –ú–∞–∫—Å_—Ü–µ–Ω–∞=("–¶–µ–Ω–∞", "max"),
        –°—Ä–µ–¥_–¥–Ω–µ–π_–≤_–ø—Ä–æ–¥–∞–∂–µ=("–î–Ω–µ–π –≤ –ø—Ä–æ–¥–∞–∂–µ", "mean"),
        –°—Ä–µ–¥_–ø—Ä–æ–±–µ–≥=("–ü—Ä–æ–±–µ–≥_—á–∏—Å—Ç–æ", "mean"),
    )
    .sort_values("–ö–æ–ª_–≤–æ_–æ–±—ä—è–≤–ª–µ–Ω–∏–π", ascending=False)
    .head(10)
    .reset_index()
)

# –û–∫—Ä—É–≥–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
top_models[["–°—Ä–µ–¥_—Ü–µ–Ω–∞", "–ú–∏–Ω_—Ü–µ–Ω–∞", "–ú–∞–∫—Å_—Ü–µ–Ω–∞", "–°—Ä–µ–¥_–¥–Ω–µ–π_–≤_–ø—Ä–æ–¥–∞–∂–µ", "–°—Ä–µ–¥_–ø—Ä–æ–±–µ–≥"]] = (
    top_models[["–°—Ä–µ–¥_—Ü–µ–Ω–∞", "–ú–∏–Ω_—Ü–µ–Ω–∞", "–ú–∞–∫—Å_—Ü–µ–Ω–∞", "–°—Ä–µ–¥_–¥–Ω–µ–π_–≤_–ø—Ä–æ–¥–∞–∂–µ", "–°—Ä–µ–¥_–ø—Ä–æ–±–µ–≥"]].round(0)
)

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
st.subheader("üèÜ –¢–æ–ø-10 –º–æ–¥–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
st.dataframe(top_models)

# –¢–∞–±–ª–∏—Ü–∞
st.subheader("üìã –î–µ—Ç–∞–ª–∏")
st.dataframe(filtered_df.reset_index(drop=True))
